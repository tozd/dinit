Z dinit: info: bash/X: PID X finished with signal 15
Z dinit: info: bash/X: sending SIGTERM to PID X
Z dinit: info: dinit exiting with status 0
Z dinit: info: service1/run: PID X finished with status 0
Z dinit: info: service1/run: running with PID X
Z dinit: info: service1/run: starting
Z dinit: info: service2/run: PID X finished with signal 15
Z dinit: info: service2/run: running with PID X
Z dinit: info: service2/run: starting
Z dinit: info: service2/run: stopping
Z dinit: info: service2/stop: PID X finished with status 0
Z dinit: info: service2/stop: running with PID X
Z dinit: info: service3/run: PID X finished with signal 15
Z dinit: info: service3/run: running with PID X
Z dinit: info: service3/run: sending SIGTERM to PID X
Z dinit: info: service3/run: starting
Z dinit: info: service3/run: stopping
Z dinit: info: service4/log: PID X finished with status 0
Z dinit: info: service4/log: running with PID X
Z dinit: info: service4/log: starting
Z dinit: info: service4/run: PID X finished with signal 15
Z dinit: info: service4/run: running with PID X
Z dinit: info: service4/run: sending SIGTERM to PID X
Z dinit: info: service4/run: starting
Z dinit: info: service4/run: stopping
Z dinit: info: service5/log: PID X finished with status 0
Z dinit: info: service5/log: running with PID X
Z dinit: info: service5/log: starting
Z dinit: info: service5/run: PID X finished and disabled itself
Z dinit: info: service5/run: running with PID X
Z dinit: info: service5/run: starting
Z dinit: info: sleep/X: PID X finished with signal 15
Z dinit: info: sleep/X: sending SIGTERM to PID X
Z dinit: warning: bash/X: terminating reparented child process with PID X
Z dinit: warning: bash/X: terminating reparented child process with PID X: bash -c sleep 3; echo x y z
Z dinit: warning: service1/run: not JSON stdout: foo
Z dinit: warning: sleep/X: terminating reparented child process with PID X: sleep 3
Z service1/run: test
Z service2/stop: sending SIGTERM to PID X using stop file
Z service4/log: invalid
Z service4/log: logstderr
Z service4/run: stderr
